// Copyright 2015 gRPC authors.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
syntax = "proto3";

option objc_class_prefix = "HAWQ";
package comm;

enum DRM_ERROR_CODE {
  FUNC_RETURN_OK = 0;
  FUNC_RETURN_FAIL = 1;
}

message Empty {}

message createResponse {
  int32 resourceId = 1;
}

message acquireResRequest{
  int32 resourceId = 1;
  int32 sliceSize = 2;
  int64 iobytes = 3;
  int32 max_target_segment_num = 4;
  int32 min_target_segment_num = 5;
}

message Segment {
  string hostname = 1;
  string address = 2;
  string hdfsHostname = 3;
  int32 segindex = 4;
  int32 ID = 5;
  int32 port = 6;
}

message acquireResResponse{
  int32 segCount = 1;
  uint32 memory_mb = 2;
  double vcore = 3;
  repeated Segment segments = 4;
}

message releaseResRequest{
  int32 resourceId = 1;
}

service RM{
  //create a resource messager context
  rpc CreateNewResourceContext(Empty) returns(createResponse){}

  //
  rpc AcquireResourceFromRM(acquireResRequest) returns(acquireResResponse) {}

  //
  rpc ReleaseResourceFromRM(releaseResRequest) returns(Empty) {}

  //
  rpc GetSelfNetInfo(Empty) returns(Segment){}
}

